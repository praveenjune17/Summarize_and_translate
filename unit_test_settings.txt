##################
*) Funtional tests
  *) nan capture
  *) zero the inputs and check the op 
  *) check Loss to zero and check the prediction
  *) Backprop check (https://www.tensorflow.org/tutorials/customization/autodiff)
################
Data sanity check:
  *) filtering conditions work?
  *) Visualize the token len
#######################
*)Pre-test check
  *) Model.summary()
  *) save model''s initial weights and check its initial loss value
  *) Create a --unit test argument which does the below 
      *) turn off regularization, reduce the model parameters to minimum, set d_model, dff, '#' layers to minimum 
      *) reduce dataset size
      *) train_batch_size = 1
      *) grad_accu = train_batch_size
      *) epoch = 10000
      *) Randomness check
  *) Stop decoding when sep_id is generated by the decoder after certain tolerance is reached 
  *) Replace convert_wordpiece_to_words in metrics.py by a method in tokenizer
    *)tokenizer = BertWordPieceTokenizer("bert-base-uncased-vocab.txt", lowercase=True)
  *) METEOR, BLEU :- https://github.com/gcunhase/NLPMetrics
  *) Print all the evaluation metrics, remove validation acccuracy from evaluation
  *) implement BLEU score
      *) import sacrebleu
        refs = [['The dog bit the man.', 'It was not unexpected.', 'The man bit him first.'],
                ['The dog had bit the man.', 'No one was surprised.', 'The man had bitten the dog.']]
        sys = ['The dog bit the man.', "It wasn't surprising.", 'The man had just bitten him.']
        bleu = sacrebleu.corpus_bleu(sys, refs)
        print(bleu.score)
  *) Replace tf.py_function see glue_convert_examples_to_features
  *) Visualize the attention weights
  *) make bert score use TF BERT model                                            
  *) Read CSV using tensorflow , convert numpy operations to tensorflow operations #remove third party
  *) TF2 profiler   #add on
##################################
*) Memory limitation test
  *) compute estimated memory consumption
*) Speed test
  *) turnoff mixed _ precison and jit and monitor the speed
  