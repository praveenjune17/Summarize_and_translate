*) Client script creation (spell check, preprocess) 
*) encode without tf.py_function https://colab.research.google.com/drive/1IAIeaTdl4bJlWxDJS6AXFnBCg1B92E5Z#scrollTo=NsaUPscGZ-Mq
###################################################### 
Base paper:-  http://www.iitp.ac.in/~sukanta.pcs15/pubs/WAT_2018_paper_12.pdf 
###########3333
Testing Rules

Flow test

for single_batch_size:
	model_capacity check
	input independent baseline
	randomness check
	initial loss check

for batch_size in [single, multiple]:
	run train pipeline
	run eval pipeline

Watch out:-
	# one line space after function name and before return
	#) check duplicates
	#) separate script for python ops
	#) test cases on whether inference decoders

Post-training improvements:-
    #) Hyper parameter tuning on beam size, length penalty, dropout, label smoothing
	#) Multiple occurences of stop values in beam search and stop repeated occurences of words
	#) Add (follow the same preprocessing in the tfds pipeline) in the client script and also remove vulgar words, add spell correction, lower casing 

Work on:-

	#) embedding projector in tensorboard :- https://www.tensorflow.org/tensorboard/tensorboard_projector_plugin
		*) positional encoded embeddings
	#) test early stopping once
	#) seperate out translation and summarize 
		#) metrics
		#) preprocess 
		#) start and end IDS
	#) BLEU score scareBLEU or from official.transformer import compute_bleu
	#) A single class for all the evaluation metrics
	#) run unit test for the last architecture
	#) Data augumentation :- https://colab.research.google.com/drive/1RGWrQv3e0CRDPDROQ3ZmUWTmlRljasGi?authuser=0#scrollTo=E9RYnn9VDE4N
	
	#) gradient accumulation test :- run a accuracy check code with and without grad accum
	
##########################################################
#) GPU profiler
#) Tensorflow graph optimizations
#) Tensorflow implementation of BERT score


=======
a)  create a single project
Testing Rules
########################################################
#) meaning full names
#) if same code is repeated then use a function
#) separate script for specific functions
#) functions should be small
#) one method that clearly say what it does
#) remove composite switch statements
#) identify memory leakage
#################################



